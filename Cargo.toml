[package]
name = "chalkydri"
description = "A blazingly fast FRC vision system"
license = "GPL-3.0"
version = "0.1.0"
edition = "2021"

[features]
#default = ["libcamera", "capriltags"]
#default = ["capriltags"]
default = ["libcamera", "mjpeg", "dep:yuvutils-rs"]
apriltags = ["dep:chalkydri-apriltags"]
ml = ["dep:tfledge"]
python = ["dep:pyo3"]
mjpeg = ["dep:mozjpeg"]
libcamera = ["dep:libcamera"]

# AprilTags C library
capriltags = ["dep:apriltag", "dep:apriltag-image"]

rerun_web_viewer = ["dep:re_web_viewer_server", "rerun/web_viewer", "re_ws_comms/server"]
nokhwa = ["dep:nokhwa"]

[dependencies]
env_logger = "0.11.2"
log = "0.4.21"
mozjpeg = { version = "0.10.7", optional = true, features = [
  "with_simd",
  "nasm_simd",
] }
tfledge = { version = "*", path = "crates/chalkydri-tfledge", optional = true }
pyo3 = { version = "0.23.3", optional = true, features = [
  "generate-import-lib",
] }
tokio = { version = "1", features = ["rt-multi-thread", "macros", "fs"] }
chalkydri-apriltags = { version = "*", optional = true, path = "crates/chalkydri-apriltags" }
libcamera = { version = "0.3.0", optional = true, default-features = false, features = [
  "libcamera_semver_versioning",
  "vendor_rpi",
], git = "https://github.com/chalkydri/libcamera-rs.git", branch = "main" }
serde = { version = "1", features = ["derive"] }
toml = "0.8.12"
actix-web = { version = "4.5.1", optional = true }
minint = { version = "0.1.0", path = "crates/minint" }
utoipa = { version = "5.2.0", optional = true, features = ["actix_extras"] }
serde_json = "1"
fastrand = "2.1.0"
apriltag = { version = "0.4.0", optional = true }
apriltag-image = { version = "0.1.0", optional = true }
yuvutils-rs = { version = "0.5.14", optional = true, features = ["rayon"] }
rerun = { version = "0.21.0", default-features = false, features = ["nasm", "sdk", "server", "log"] }
re_web_viewer_server = { version = "0.21.0", optional = true }
re_ws_comms = { version = "0.21.0" }
cam-geom = "0.15.1"
rapier3d = { version = "0.23.0", features = ["parallel", "simd-nightly"] }
sharded-slab = "0.1.7"
nokhwa = { version = "0.10.7", default-features = false, optional = true, features = ["input-v4l"] }

[workspace]
members = [
  "crates/chalkydri-apriltags",
  "crates/chalkydri-tfledge",
  "crates/minint",
]

# Compile dependencies with optimization level 3 even when in debug mode
# This can reduce the time required to build when actively developing and testing.
[profile.dev.package.'*']
opt-level = 3

# Compile everything with extreme optimizations when in release mode
[profile.release]
# Optimization level 3 is the most extreme level of optimization.
# It isn't *always* the most optimized for every codebase, but I haven't bothered testing.
# TODO: do that testing
opt-level = 3
# Link Time Optimization
lto = true
# Strip extra symbols (used for debugging and such)
strip = true
# Code generation-- only 1 worker generates more optimized code in theory
codegen-units = 1
