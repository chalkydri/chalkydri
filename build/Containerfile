# Google containment
FROM docker.io/library/alpine:latest as build

# Install required packages
RUN apk update
RUN apk add musl-dev curl git bash make mold \
        cmake autoconf automake g++ gcompat clang-dev binutils libtool \
        libstdc++-dev xxd linux-headers abseil-cpp-dev libusb-dev flatbuffers-dev

WORKDIR /build
# Clone non-Rust dependencies
RUN git clone https://github.com/google/flatbuffers.git && \
        git clone https://github.com/tensorflow/tensorflow.git && \
        git clone https://github.com/frc4533-lincoln/libedgetpu.git

# Build non-Rust machine learning deps
COPY ./build-ml.sh .
RUN chmod +x ./build-ml.sh && ./build-ml.sh

# Now the actual image, based on glorious Alpine
FROM docker.io/library/rust:alpine as final

# Copy over build artifacts from the TFLite dumpster fire
COPY --from=build /deps /deps

# Install required packages
RUN apk update
RUN apk add musl-dev curl git bash make mold \
        cmake autoconf automake clang-dev binutils libtool \
        libstdc++-dev xxd linux-headers gcompat abseil-cpp-dev libusb-dev \
        python3 py3-pip libcamera-dev libcamera-tools flatbuffers-dev

# Set command line shell
SHELL [ "/bin/bash", "-c" ]

# Install required Rust toolchains
RUN rustup target add x86_64-unknown-linux-musl
RUN rustup target add aarch64-unknown-linux-musl

WORKDIR /src
RUN git clone https://github.com/chalkydri/chalkydri.git .
